/*
 接着上一篇再继续讲两个比较重要的变换矩阵：透视投影和正交投影。在OpenGL中，如果想对模型进行操作，就要对这个模型的状态(当前的矩阵)乘上这个操作对应的一个矩阵。如果乘以变换矩阵(平移, 缩放, 旋转), 那相乘之后, 模型的位置会改变，如果乘以投影矩阵(将3D物体投影到2D平面), 模型的投影方式被设置，如果乘以纹理矩阵, 模型的纹理方式被设置，当前矩阵如何改变就看做了哪些操作(与什么矩阵相乘)。
 
 透视投影：
 模仿人眼观察物体有远小近大的效果。这种投影更加真实。
 
 
 正交投影：
 正交投影属于平行投影, 投影线平行, 视景体是长方形的, 投影的内容不会出现近大远小的效果
 
 对应的函数为：GLKMatrix4MakePerspective(float fovyRadians, float aspect, float nearZ, float farZ)
 如上图，调用GLKMatrix4MakePerspective函数创建一个对称的透视投影矩阵。其中参数fovyRadians定义视野在Y-Z平面的角度，范围是[0.0,180.0]；参数aspect是投影平面宽度与高度的比率；参数nearZ和farZ分别是近远裁剪面到视点（沿Z负轴）的距离，它们总为正值。
 
 */
